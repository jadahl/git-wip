#!/bin/bash

# Copyright â“’ 2016 Mattias Bengtsson
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with This program.  If not, see <http://www.gnu.org/licenses/>.
#
# Author: Mattias Bengtsson <mattias.jc.bengtsson@gmail.com>

# git-wip makes it easier to work with wip-branches

function auto-squash {
    local flags
    flags=${*:1:$#-1}

    EDITOR=true git rebase -i --autosquash "${flags[@]}" "$(rebase-point)"
}

function edit-history {
    local flags
    flags=( ${*:1:$#-1} )

    git rebase -i "${flags[@]}" "$(rebase-point)"
}

function log {
    local flags

    flags=( ${@:1:$#-1} )
    git log "${flags[@]}" "$(rebase-point)"..
}

function rebase-point {
    for ref in $(git rev-list --parents "HEAD"); do
        if [ "$(git branch --contains "${ref}" | wc -l)" -gt 1 ]; then
            echo "${ref}"
            return
        fi
    done
}

arg="${1}"
shift
case "${arg}" in
    auto-squash)
        auto-squash "${@}"
        ;;
    edit-history)
        edit-history "${@}"
        ;;
    log)
        log "${@}"
        ;;
    rebase-point)
        rebase-point "${@}"
        ;;
    *)
        echo "Usage: git wip [command] [<option>]"
        echo
        echo "  git wip helps you modify commits since the latest branch-point"
        echo "  All commands work only on the commits unique to this branch"
        echo
        echo "Commands:"
        echo "  auto-squash         Automatically squash all squash! and fixup! commits"
        echo "  edit-history        Run an interactive rebase"
        echo "  log                 Show commit logs"
        echo "  rebase-point        Get the latest branch-off-point"
        exit 2
        ;;
esac
